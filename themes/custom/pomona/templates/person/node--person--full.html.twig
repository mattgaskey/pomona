{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set classes = (not node.isPublished()) ? 'unpublished' %}
{{ content.content_moderation_control }}

<article{{ attributes.addClass(classes) }}>

  {{ title_prefix }}
  {% if not page %}
    <h2{{ title_attributes }}>
      <a href="{{ url }}" rel="bookmark">{{ label }}</a>
    </h2>
  {% endif %}
  {{ title_suffix }}


  <div class="c-container">
    {% embed '@fractal/with-sidebar.twig' with {
      major: '3/4',
      minor: '1/4'
    } %}
      {% block with_sidebar_main %}
        {% embed '@fractal/intro.twig' %}
          {% block intro_content %}
            {{ content.field_position }}
          {% endblock %}
        {% endembed %}
        <div class="font-sans text-lg lg:flex border-b-2 border-yellow-100 pb-20">
          <div class="editorial lg:w-1/2 lg:pr-30 leading-relaxed">
            {{ content.field_e_mail|render }}
            <div class="inline">Office: </div>
            {{ content.field_location|injectclass("inline") }}
            {{ content.field_office_number|injectclass("inline") }}<br />
            {{ content.field_primary_address }}
            {{ content.field_office_phone }}
            {{ content.field_lab_location|injectclass("inline") }}
            {{ content.field_lab_office_number|injectclass("inline") }}
            {{ content.field_secondary_address }}
            {{ content.field_lab_phone }}
            {{ content.field_link }}
            {{ content.field_link_2 }}
            {{ content.field_social_media }}
          </div>
          <div class="editorial lg:w-1/2 lg:pl-30">
            {{ content.field_year }}
            {{ content.field_office_hours }}
          </div>
        </div>
        <div class="py-20">
          {% if content.field_external_cv.0 %}
            {{ content.field_external_cv }}
          {% else %}
            {{ content.field_download_cv_as_pdf }}
          {% endif %}
        </div>
      {% endblock %}
      {% block with_sidebar_aside %}
          {{ content.field_media|injectclass("person") }}
          {% set image_url = file_url(content.field_media[0]['#media'].field_media_image.entity.uri.value) %}
          {% if content.field_hide_high_res_link|children|render == 'False' %}
            <a href="{{ image_url }}" class="btn btn-lavender btn-uppercase btn-block btn-download">Download High-Res Image</a>
          {% endif %}
      {% endblock %}
    {% endembed %}
  </div>

  {{ content.body }}

  {% if has_tabs %}

  {% embed '@fractal/tabs.twig' %}
    {% block tabs %}
      {# The first four tabs have multiple fields inside them. If there are no values in the tab, 
         then we want to skip the tab. This check is executed in 'pomona_preprocess_person()' in 
         the theme and stored in the has_* variables. #}
      {% if has_expertise %}
      <li>
        {% embed '@fractal/tab-pane.twig' with { tab_label: "Expertise" } %}
          {% block tab_pane_content %}
            {% if has_field_person_areas_of_expertise %}
              {% embed '@fractal/with-sidebar.twig' with { major: '3/4', minor: '1/4' } %}
                {% block with_sidebar_main %}
                  {{ content.field_expertise }}
                  {{ content.field_research_interests }}
                {% endblock %}
                {% block with_sidebar_aside %}
                  {{ content.field_person_areas_of_expertise }}
                {% endblock %}
              {% endembed %}
            {% else %}
              <div class="c-container">
              {{ content.field_expertise }}
              {{ content.field_research_interests }}
              </div>
            {% endif %}
          {% endblock %}
        {% endembed %}
      </li>
      {% endif %}
      {% if has_work %}
      <li>
        {% embed '@fractal/tab-pane.twig' with { tab_label: "Work" } %}
          {% block tab_pane_content %}
            {% if has_field_person_media_gallery %}
              {% embed '@fractal/with-sidebar.twig' with { major: '3/4', minor: '1/4' } %}
                {% block with_sidebar_main %}
                  {{ content.field_work_body }}
                {% endblock %}
                {% block with_sidebar_aside %}
                  {{ content.field_person_media_gallery }}
                {% endblock %}
              {% endembed %}
            {% else %}
              <div class="c-container">
              {{ content.field_work_body }}
              </div>
            {% endif %}
          {% endblock %}
        {% endembed %}
      </li>
      {% endif %}
      {% if has_education %}
      <li>
        {% embed '@fractal/tab-pane.twig' with { tab_label: "Education" } %}
          {% block tab_pane_content %}
            {% if has_field_recent_courses %}
            {% embed '@fractal/with-sidebar.twig' with { major: '3/4', minor: '1/4' } %}
              {% block with_sidebar_main %}
                {{ content.field_education }}
                {{ content.field_professional_experience }}
                {{ content.field_qualifications_certificati }}
              {% endblock %}
              {% block with_sidebar_aside %}
                {{ content.field_recent_courses }}
              {% endblock %}
            {% endembed %}
            {% else %}
              <div class="c-container">
              {{ content.field_education }}
              {{ content.field_professional_experience }}
              {{ content.field_qualifications_certificati }}
              </div>
            {% endif %}
          {% endblock %}
        {% endembed %}
      </li>
      {% endif %}
      {% if has_awards %}      
      <li>
        {% embed '@fractal/tab-pane.twig' with { tab_label: "Awards & Honors" } %}
          {% block tab_pane_content %}
          <div class="c-container">
          {{ content.field_awards_text }}
          </div>
          {% endblock %}
        {% endembed %}
      </li>
      {% endif %}
      {# field_additional_tabs is a single field list, so it can rely on Drupal's own empty-checking #}
      {{ content.field_additional_tabs }} 
    {% endblock %}
  {% endembed %}

  {% endif %}
</article>