{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{% set has_views_reference = content.field_views_reference|children is not empty %}
{% set has_sidebar_region = drupal_region('sidebar_first')['#region'] is not empty %}
{% if has_views_reference %}
  {% set view_name = content.field_views_reference[0]['contents']['#cache']['keys'][2] %}
  {% set view_machine_name = content.field_views_reference[0]['contents']['#cache']['keys'][3] %}
  {% set view_args = content.field_views_reference[0]['contents']['#cache']['keys'][4] %}
{% else %}
  {% set view_name = content.field_legacy_view_name|render|striptags|trim %}
  {% set view_machine_name = content.field_legacy_view_machine_name|render|striptags|trim == 'default' ? 'block_1' : content.field_legacy_view_machine_name|render|striptags|trim %}
  {% set view_args = content.field_legacy_view_argument|render|striptags|trim %}
{% endif %}
{% set classes = (not node.isPublished()) ? 'unpublished' %}
{{ content.content_moderation_control }}

<article{{ attributes.addClass(classes) }}>
  {% if node_special %}
    <div class="special">
      {{ content.field_highlight_slideshow }}
    </div>
  {% elseif is_front %}
    <div class="homepage-slideshow">
      {{ content.field_highlight_slideshow }}
    </div>
  {% else %}
    {{ content.field_highlight_slideshow }}
  {% endif %}
  {% if node_layout is not empty %}
    {% include node_layout %}
  {% elseif not is_front %}
    {% if has_sidebar_region %}
      {% embed '@fractal/with-sidebar.twig' %}
        {% block with_sidebar_main %}
          {% if url == '/emergency'%}{{ drupal_view('campus_alerts', 'status') }}{% endif %}
          {{ content.field_incontent_slideshow }}
          {{ content.body|inject(content.field_insets,content.field_accordion) }}
          {% if url == '/administration/its' %}{{ drupal_entity('block','itsdepartmentnews', check_access=false) }}{% endif %}
          {% if url == '/academics/departments/biology' %}{{ drupal_entity('block','biologydepartmentnews', check_access=false) }}{% endif %}
          {% if url == '/academics/departments/chemistry' %}{{ drupal_entity('block','chemistrydepartmentnews', check_access=false) }}{% endif %}
          {% if drupal_view_result(view_name, view_machine_name, view_args) and view_args is not empty %}
            {{ drupal_view(view_name, view_machine_name, view_args) }}
          {% endif %}
          {{ content.field_content_bottom }}
        {% endblock %}
        {% block with_sidebar_aside %}
          {{ drupal_region('sidebar_first') }}
          {{ content.field_page_contact }}
        {% endblock %}
      {% endembed %} 
    {% else %}
      <div class="c-container my-20 lg:mt-85 lg:mb-40 text-xl font-serif editorial">
        {{ content.field_incontent_slideshow }}
        {{ content.body|inject(content.field_insets,content.field_accordion) }}
        {% if drupal_view_result(view_name, view_machine_name, view_args) and view_args is not empty %}
          {{ drupal_view(view_name, view_machine_name, view_args) }}
        {% endif %}
        {{ content.field_content_bottom }}
      </div>
    {% endif %}   
  {% endif %}
  {{ content.field_footer }}
</article>
